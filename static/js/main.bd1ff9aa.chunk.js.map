{"version":3,"sources":["util/wiki.js","Components/WikiEntry/WikiEntry.js","Components/WikiEntries/WikiEntries.js","Components/App.js","reportWebVitals.js","index.js"],"names":["searchWiki","getEntries","term","fetch","then","response","json","jsonResponse","query","search","map","entry","title","id","pageid","text","snippet","replace","catch","error","console","log","WikiEntry","className","href","this","props","target","rel","he","decode","React","Component","WikiEntries","wikiEntries","App","handleTextChange","event","setState","value","handleEnterPress","searchTerm","state","key","preventDefault","stopPropagation","hideInputArea","searchIcon","showInputArea","document","addEventListener","removeEventListener","type","placeholder","onChange","onKeyDown","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gSAuBeA,G,MArBI,CACfC,WADe,SACJC,GACP,OAAOC,MAAM,iFAAD,OAAkFD,EAAlF,iBAAsGE,MAAK,SAACC,GACxH,OAAOA,EAASC,UACfF,MAAK,SAACG,GACP,GAAGA,EAAaC,MACd,OAAOD,EAAaC,MAAMC,OAAOC,KAAI,SAACC,GACpC,MAAO,CACHC,MAAOD,EAAMC,MACbC,GAAIF,EAAMG,OACVC,KAAMJ,EAAMK,QAAQC,QAAQ,wCAAyC,WAK9EC,OAAM,SAACC,GACNC,QAAQC,IAAIF,S,+BCddG,E,4JACF,WACI,OACQ,oBAAGC,UAAU,YAAYC,KAAM,mCAAqCC,KAAKC,MAAMf,MAAME,GAAIc,OAAO,SAASC,IAAI,sBAA7G,UACI,oBAAIL,UAAU,QAAd,SAAuBE,KAAKC,MAAMf,MAAMC,QACxC,mBAAGW,UAAU,OAAb,SAAqBM,IAAGC,OAAOL,KAAKC,MAAMf,MAAMI,e,GAL5CgB,IAAMC,WAUfV,ICVTW,G,kKACF,WACI,OACI,qBAAKV,UAAU,cAAf,SAEQE,KAAKC,MAAMQ,YAAYxB,KAAI,SAACC,GACxB,OAAO,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAME,a,GAN3BkB,IAAMC,YAajBC,ICyDAE,E,kDApEb,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IAORU,iBAAmB,SAAAC,GACjB,EAAKC,SAAS,CACVvB,KAAMsB,EAAMV,OAAOY,MAAMtB,QAAQ,MAAO,UAV3B,EAanBuB,iBAAmB,SAAAH,GACjB,IAAII,EAAa,EAAKC,MAAM3B,KACX,UAAdsB,EAAMM,MACPN,EAAMO,iBACNP,EAAMQ,kBACN7C,EAAWC,WAAWwC,GAAYrC,MAAK,SAACI,GACtC,EAAK8B,SAAS,CAACJ,YAAa1B,SAnBf,EAuBnBsC,cAAgB,SAAAT,IACe,IAA1B,EAAKK,MAAMK,YACZ,EAAKT,SAAS,CACZS,YAAY,EACZb,YAAa,KAGjBG,EAAMO,kBA9BW,EAgCnBI,cAAgB,SAAAX,IACe,IAA1B,EAAKK,MAAMK,YACZ,EAAKT,SAAS,CAACS,YAAY,IAE7BV,EAAMO,kBAlCN,EAAKF,MAAQ,CACXK,YAAY,EACZhC,KAAM,GACNmB,YAAa,IALE,E,qDAsCnB,WACEe,SAASC,iBAAiB,UAAWzB,KAAKe,oB,kCAE5C,WACCS,SAASE,oBAAoB,UAAW1B,KAAKe,oB,oBAE9C,WACE,OACE,qBAAKjB,UAAU,MAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,mBAAGA,UAAU,gBAAgBC,KAAK,+CAClCG,OAAO,SAASC,IAAI,sBADpB,8CAG4B,IAA1BH,KAAKiB,MAAMK,WACX,sBAAKxB,UAAU,kBAAf,UACE,uBAAOA,UAAU,eAAe6B,KAAK,OAAOC,YAAY,iBAAiBC,SAAU7B,KAAKW,iBAAkBmB,UAAW9B,KAAKe,mBAC1H,mBAAGjB,UAAU,4BAA6BiC,QAAS/B,KAAKqB,mBAE1D,sBAAKvB,UAAU,cAAf,UACE,mBAAGA,UAAU,sBAAsBiC,QAAS/B,KAAKuB,gBACjD,mBAAGzB,UAAU,kBAAb,qCAGJ,cAAC,EAAD,CAAaW,YAAaT,KAAKiB,MAAMR,uB,GA9D7BH,IAAMC,WCOTyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvD,MAAK,YAAkD,IAA/CwD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,SAM1BX,M","file":"static/js/main.bd1ff9aa.chunk.js","sourcesContent":["\r\n\r\nconst searchWiki = {\r\n    getEntries(term) {\r\n        return fetch(`https://en.wikipedia.org/w/api.php?action=query&list=search&origin=*&srsearch=${term}&format=json`).then((response) => {\r\n        return response.json();\r\n      }).then((jsonResponse) => {\r\n        if(jsonResponse.query) {\r\n          return jsonResponse.query.search.map((entry) => {\r\n            return {\r\n                title: entry.title,\r\n                id: entry.pageid,\r\n                text: entry.snippet.replace(/<\\/?\\w(?:[^\"'>]|\"[^\"]*\"|'[^']*')*>/gmi, '') \r\n            }\r\n          })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    }\r\n}\r\n\r\nexport default searchWiki;","import React from 'react';\r\nimport './WikiEntry.css';\r\nimport he from '../../../node_modules/he/he';\r\n\r\nclass WikiEntry extends React.Component {\r\n    render() {\r\n        return (\r\n                <a className='wikientry' href={\"https://en.wikipedia.org/?curid=\" + this.props.entry.id} target=\"_blank\" rel=\"noreferrer noopener\">\r\n                    <h3 className='title'>{this.props.entry.title}</h3>\r\n                    <p className='text'>{he.decode(this.props.entry.text)}</p>\r\n                </a>\r\n        )\r\n    }\r\n}\r\nexport default WikiEntry;","import React from 'react';\r\nimport WikiEntry from '../WikiEntry/WikiEntry';\r\nimport './WikiEntries.css';\r\n\r\nclass WikiEntries extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='wikiEntries'>\r\n                {\r\n                    this.props.wikiEntries.map((entry) => {\r\n                        return <WikiEntry key={entry.id} entry={entry} />\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default WikiEntries;","import React from 'react';\nimport './App.css';\nimport searchWiki from '../util/wiki';\nimport WikiEntries from './WikiEntries/WikiEntries';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchIcon: false,\n      text: '',\n      wikiEntries: [],\n    }\n  }\n  handleTextChange = event => {\n    this.setState({\n        text: event.target.value.replace(/\\s/g, '%20')\n    })\n}\n  handleEnterPress = event => {\n    let searchTerm = this.state.text;\n    if(event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      searchWiki.getEntries(searchTerm).then((query) => {\n        this.setState({wikiEntries: query})\n      })\n    }\n  }\n  hideInputArea = event => {\n    if(this.state.searchIcon === true) {\n      this.setState({\n        searchIcon: false,\n        wikiEntries: []\n      })\n    }\n    event.preventDefault();\n  }\n  showInputArea = event => {\n    if(this.state.searchIcon === false) {\n      this.setState({searchIcon: true})\n    } \n    event.preventDefault();\n  }\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleEnterPress);\n  }\n  componentWillUnmount() {\n   document.removeEventListener(\"keydown\", this.handleEnterPress);\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div className='App-container'>\n          <a className='search-random' href='https://en.wikipedia.org/wiki/Special:Random' \n          target=\"_blank\" rel=\"noreferrer noopener\">Click here for a random article</a>\n          {\n            this.state.searchIcon === true ?\n            <div className='input-container'>\n              <input className='search-input' type='text' placeholder='Search here...' onChange={this.handleTextChange} onKeyDown={this.handleEnterPress}/>\n              <i className=\"far fa-window-close fa-2x\"  onClick={this.hideInputArea}></i>\n            </div> :\n            <div className='search-icon'>\n              <i className=\"fas fa-search fa-4x\" onClick={this.showInputArea}></i>\n              <p className='searchIcon-text'>Click Icon To Search</p>\n            </div>\n          }\n          <WikiEntries wikiEntries={this.state.wikiEntries}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}